var WorkshopFooter = React.createClass({displayName: "WorkshopFooter",
  style: {
    color: '#888',
  },

  render: function() {
    return (
      React.createElement("div", {className: "column middle aligned footer"}, 
        React.createElement("div", {className: "text-center"}, 
          React.createElement("p", {id: "footer-title"}, 
            "Do you have time for a tea?"
          ), 
          React.createElement("p", null, "Drop me a line ", React.createElement("a", {href: "mailto:hello@hangontie.co", style: this.style}, "here!"), " ", React.createElement("br", null), React.createElement("br", null), " Montreal. 2015.")
        )
      )
    );
  }
});

var WorkshopGrid = React.createClass({displayName: "WorkshopGrid",
  render: function() {
    var item = this.props.data.map(function(item) {
      return (
        React.createElement(WorkshopItem, {title: item.name, caption: item.caption, thumbnail: item.thumbnail, link: item.link})
      )
    });


    return (
      React.createElement("div", {className: "three column stackable row"}, 


       item, 

      React.createElement(WorkshopFooter, null)

      )

    );
  }
});

var WorkshopItem = React.createClass({displayName: "WorkshopItem",
  render: function() {
    return (
      React.createElement("div", {className: "column"}, 
        React.createElement("div", {className: "ui blurring fluid image preview"}, 
          React.createElement("div", {className: "ui dimmer"}, 
            React.createElement("div", {className: "content"}, 
              React.createElement("div", {className: "center"}, 
                React.createElement("h3", null, this.props.title), 
                React.createElement("p", null, this.props.caption), 
                React.createElement("div", {className: "divider"}), 

                React.createElement("a", {href: this.props.link, target: "_blank"}, 
                  React.createElement("button", {className: "ui basic button sharp uppercase white border-white"}, 
                      "Learn more"
                  )
                )


              )
            )
          ), 

          React.createElement("img", {className: "ui image", src: this.props.thumbnail})

        )
      )
    );
  }
});

/**
* Valet 1.0
* http://hang-up.github.io
*
*  Date: 2015-09-12
*
*/
var valet = {

  meta: {
    version: 1.0
  },

  /**
  * Array of projects to be displayed in the workshop.
  *
  */
  data : [
    {
      name: 'Matchr',
      caption: 'Matching colors made easy.',
      link: 'https://github.com/hang-up/matchr',
      thumbnail: '/Projects/Matchr/thumbnail_matchr.png'
    },

    {
      name: 'Duka',
      caption: 'An open source e-commerce application.',
      link: 'https://bitbucket.org/kemsolutions/duka',
      thumbnail: '/Projects/Duka/duka-logo.png'
    },

    {
      name: 'Solar',
      caption: 'To the sky and beyond.',
      link: '/Projects/Solar/index.html',
      thumbnail: '/Projects/Solar/thumbnail_solar.png'
    },

    {
      name: 'The Mile End Cococa Collective',
      caption: 'Coming soon...',
      link: '',
      thumbnail: '/Projects/Cocoa/thumbnail_cocoa.png'
    },

    {
      name: 'Made in France',
      caption: '"Artwork" on my way to Montreal.',
      link: '/Projects/Art_France/made_in_france.png',
      thumbnail: '/Projects/Art_France/made_in_france.png'
    },

    {
      name: 'Hang-up',
      caption: 'The redesign.',
      link: 'https://github.com/hang-up/hang-up.github.io',
      thumbnail: '/Projects/HangUp/thumbnail_hangup.png'
    },

    {
      name: 'Adblockr',
      caption: 'Why so selfish?',
      link: 'https://github.com/hang-up/adblockr',
      thumbnail: '/Projects/Adblockr/template_blockr.png'
    }
  ],


  /**
  * Boostrap various elements when first loading / resizing.
  *
  * @return {[type]} [description]
  */
  bootstrap: function() {
    $(window).on("load resize", function(){
      $(".homepage-container").css({
        width: window.innerWidth,
        height: window.outerHeight
      });

      console.log("Bootstrapped!");

      $(this).width() < 820 ?
      $("#homepage-content-logo").removeClass("large").addClass("medium") :
      $("#homepage-content-logo").removeClass("medium").addClass("large");

    });
  },


  /**
  * Shift container's origin based on the appropriate trigger.
  *
  * @param {[type]} trigger   [description]
  * @param {[type]} container [description]
  */
  setTransformOrigin: function(trigger, container) {
    var left = trigger.offset().left + trigger.width(),
    top = trigger.offset().top + trigger.width()/2 - $(window).scrollTop()
    percentLeft = (left / ($(window).width())) * 100,
    percentTop = (top / ($(window).height())) * 100;

    container.css({
      "transform-origin" : percentLeft + "% " + percentTop + "%"
    });

  },


  /**
  * Initialize semantic's dimmer module.
  *
  *
  */
  initDimmer: function() {
    $('.preview').dimmer({
      on: 'hover'
    });
  },

  setOverflow(element, property){
    element.css("overflow", property);
  },

  /**
  * Fade and Scale the modals.
  *
  * The core logic is the same for both of the triggers, only difference happens during the first load of worskhop container,
  * the content fades in with a bit more delay.
  *
  *
  */
  openModals: function() {
    $("#homepage-workshop-trigger, #homepage-about-trigger").on("click", function() {

      // Sets the html overflow to hidden to avoid double scroll.
      valet.setOverflow($("html"), "hidden");

      var container = $($(this).data("container")),
      content = $($(this).data("content")),
      trigger = $(this);

      // Makes the trigger white and empty
      $(this).addClass("active transparent");

      // Scale and display the appropriate container once the trigger has finished its transition.
      $(this).one("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", function(){

        // Scale and fade in the container.
        container.delay(300).transition({
          opacity: 1,
          scale: 1,
          duration: 300,
          easing: 'in-out',
          complete: function() {

            // Fade in the content...
            content.delay(100).transition({ opacity: 1});

            // ... and for the workshop section, fade in the grid with a bit of delay.
            trigger.attr("id") === "homepage-workshop-trigger" ? new Function("$('.workshop-content .grid').each(function(i, e){ $(e).delay(300 + i * 500).transition({ opacity: 1 })})")() : "";

          }
        });
      });
    });
  },


  /**
  * Fade and scale out the modals.
  *
  *
  */
  closeModals: function() {
    $(".close-cross").on("click", function() {

      // Sets the html overflow to auto to allow scroll on main page.
      valet.setOverflow($("html"), "auto");

      var container =  $($(this).data("container")),
      content = $($(this).data("content")),
      trigger = $($(this).data("trigger"));

      // Fade out the content.
      content.transition({
        opacity: 0,
        duration: 300,
        easing: 'in-out',
        complete: function() {

          // Fade out and scale out the container.
          container.delay(300).transition({
            opacity: 0,
            scale: 0,
            duration: 300,
            easing: 'in-out',
            complete: function() {

              // Resets the text on trigger button...
              trigger.delay(300).removeClass("active");

              // ... When the texts is finally there, remove the .transparent class.
              trigger.one("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", function() {
                $(this).removeClass("transparent");
              });
            }
          });
        }
      });
    });
  },


  init: function() {
    var self = valet;

    self.bootstrap();
    self.initDimmer();
    self.openModals();
    self.closeModals();
  }
}

; (function(window, document, $) {
  $(document).ready(function() {

    React.render(React.createElement(WorkshopGrid, {data: valet.data}), document.getElementById("workshop-grid"));

    valet.setTransformOrigin($("#homepage-workshop-trigger"), $(".workshop-container"));
    valet.setTransformOrigin($("#homepage-about-trigger"), $(".about-container"));

    valet.init();
  });

})(window, this.document, jQuery, undefined);
